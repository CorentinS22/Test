{"version":3,"sources":["book.reposiroy.test.js"],"names":["BookRepository","require","describe","test","dbMock","get","jest","fn","mockReturnThis","push","write","repository","save","id","name","expect","mock","calls","length","toBe","size","value","mockReturnValue","getTotalCount"],"mappings":"AAAA,MAAMA,cAAc,GAAGC,OAAO,CAAC,mBAAD,CAA9B;;AAEAC,QAAQ,CAAC,sBAAD,EAAyB,YAAY;AAEzCC,EAAAA,IAAI,CAAC,kBAAD,EAAqB,MAAM;AAE3B,UAAMC,MAAM,GAAG;AACXC,MAAAA,GAAG,EAAGC,IAAI,CAACC,EAAL,GAAUC,cAAV,EADK;AAEXC,MAAAA,IAAI,EAAGH,IAAI,CAACC,EAAL,GAAUC,cAAV,EAFI;AAGXE,MAAAA,KAAK,EAAGJ,IAAI,CAACC,EAAL,GAAUC,cAAV;AAHG,KAAf;AAKA,UAAMG,UAAU,GAAG,IAAIX,cAAJ,CAAmBI,MAAnB,CAAnB;AACAO,IAAAA,UAAU,CAACC,IAAX,CAAgB;AAACC,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,IAAI,EAAE;AAAd,KAAhB;AAEAC,IAAAA,MAAM,CAACX,MAAM,CAACM,KAAP,CAAaM,IAAb,CAAkBC,KAAlB,CAAwBC,MAAzB,CAAN,CAAuCC,IAAvC,CAA4C,CAA5C;AACH,GAXG,CAAJ;AAYH,CAdO,CAAR;AAgBAjB,QAAQ,CAAC,+BAAD,EAAkC,YAAY;AAElDC,EAAAA,IAAI,CAAC,oBAAD,EAAuB,MAAM;AAE7B,UAAMC,MAAM,GAAG;AACXC,MAAAA,GAAG,EAAGC,IAAI,CAACC,EAAL,GAAUC,cAAV,EADK;AAEXY,MAAAA,IAAI,EAAGd,IAAI,CAACC,EAAL,GAAUC,cAAV,EAFI;AAGXa,MAAAA,KAAK,EAAGf,IAAI,CAACC,EAAL,GAAUe,eAAV,CAA0B,CAA1B;AAHG,KAAf;AAKA,UAAMX,UAAU,GAAG,IAAIX,cAAJ,CAAmBI,MAAnB,CAAnB;AAEAW,IAAAA,MAAM,CAACJ,UAAU,CAACY,aAAX,EAAD,CAAN,CAAmCJ,IAAnC,CAAwC,CAAxC;AACH,GAVG,CAAJ;AAWH,CAbO,CAAR","sourcesContent":["const BookRepository = require('./book.repository');\n\ndescribe('Book repository Save', function () {\n\n    test('Test save a book', () => {\n\n        const dbMock = {\n            get : jest.fn().mockReturnThis(),\n            push : jest.fn().mockReturnThis(),\n            write : jest.fn().mockReturnThis()\n        };\n        const repository = new BookRepository(dbMock);\n        repository.save({id: 1, name: \"Unit test\"});\n\n        expect(dbMock.write.mock.calls.length).toBe(1);\n    });\n});\n\ndescribe('Book repository getTotalCount', function () {\n\n    test('Test getTotalCount', () => {\n\n        const dbMock = {\n            get : jest.fn().mockReturnThis(),\n            size : jest.fn().mockReturnThis(),\n            value : jest.fn().mockReturnValue(2)\n        };\n        const repository = new BookRepository(dbMock);\n\n        expect(repository.getTotalCount()).toBe(2);\n    });\n});"]}